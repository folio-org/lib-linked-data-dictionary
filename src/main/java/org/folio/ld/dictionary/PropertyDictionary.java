package org.folio.ld.dictionary;

import java.util.Arrays;
import java.util.Optional;
import lombok.Getter;

@Getter
public enum PropertyDictionary {
  ACCESSIBILITY_NOTE("http://bibfra.me/vocab/library/accessibilityNote"),
  ACCOMPANYING_MATERIAL("http://bibfra.me/vocab/library/accompanyingMaterial"),
  ADDITIONAL_PHYSICAL_FORM("http://bibfra.me/vocab/library/additionalPhysicalForm"),
  AFFILIATION("http://bibfra.me/vocab/scholar/affiliation"),
  ASSIGNER("http://bibfra.me/vocab/library/assigner"),
  ASSIGNING_SOURCE("http://bibfra.me/vocab/library/localIdAssigningSource"),
  ATTRIBUTION("http://bibfra.me/vocab/library/attribution"),
  AUTHORITY_LINK("http://bibfra.me/vocab/lite/authorityLink"),
  AWARDS_NOTE("http://bibfra.me/vocab/library/awardsNote"),
  BIBLIOGRAPHY_NOTE("http://bibfra.me/vocab/library/bibliographyNote"),
  BIOGRAPHICAL_DATA("http://bibfra.me/vocab/library/biogdata"),
  BOOK_FORMAT("http://bibfra.me/vocab/library/bookFormat"),
  CATALOGING_AGENCY("http://bibfra.me/vocab/library/catalogingAgency"),
  CHRONOLOGICAL_SUBDIVISION("http://bibfra.me/vocab/library/chronologicalSubdivision"),
  CITATION_COVERAGE("http://bibfra.me/vocab/library/citationCoverage"),
  CODE("http://bibfra.me/vocab/library/code"),
  COMPUTER_DATA_NOTE("http://bibfra.me/vocab/library/computerDataNote"),
  CONTROL_FIELD("http://bibfra.me/vocab/library/controlField"),
  CONTROL_NUMBER("http://bibfra.me/vocab/library/controlNumber"),
  CREATED_DATE("http://bibfra.me/vocab/lite/createdDate"),
  CREDITS_NOTE("http://bibfra.me/vocab/library/creditsNote"),
  DATA_QUALITY("http://bibfra.me/vocab/library/dataQuality"),
  DATE("http://bibfra.me/vocab/lite/date"),
  DATES_OF_PUBLICATION_NOTE("http://bibfra.me/vocab/library/datesOfPublicationNote"),
  DATE_END("http://bibfra.me/vocab/lite/dateEnd"),
  DATE_START("http://bibfra.me/vocab/lite/dateStart"),
  DEGREE("http://bibfra.me/vocab/library/degree"),
  DESCRIPTION_SOURCE_NOTE("http://bibfra.me/vocab/library/descriptionSourceNote"),
  DIMENSIONS("http://bibfra.me/vocab/library/dimensions"),
  DISSERTATION_ID("http://bibfra.me/vocab/library/dissertationID"),
  DISSERTATION_NOTE("http://bibfra.me/vocab/library/dissertationNote"),
  DISSERTATION_YEAR("http://bibfra.me/vocab/library/dissertationYear"),
  EDITION("http://bibfra.me/vocab/library/edition"),
  EDITION_NUMBER("http://bibfra.me/vocab/library/editionNumber"),
  ENTITY_AND_ATTRIBUTE_INFORMATION("http://bibfra.me/vocab/library/entityAndAttributeInformation"),
  EQUIVALENT("http://bibfra.me/vocab/lite/equivalent"),
  EXHIBITIONS_NOTE("http://bibfra.me/vocab/library/exhibitionsNote"),
  FIELD_LINK("http://bibfra.me/vocab/library/fieldLink"),
  FORMER_TITLE_NOTE("http://bibfra.me/vocab/library/formerTitleNote"),
  FORM_SUBDIVISION("http://bibfra.me/vocab/library/formSubdivision"),
  FUNDING_INFORMATION("http://bibfra.me/vocab/library/fundingInformation"),
  GENERAL_SUBDIVISION("http://bibfra.me/vocab/library/generalSubdivision"),
  GEOGRAPHIC_AREA_CODE("http://bibfra.me/vocab/library/geographicAreaCode"),
  GEOGRAPHIC_COVERAGE("http://bibfra.me/vocab/library/geographicCoverage"),
  GEOGRAPHIC_SUBDIVISION("http://bibfra.me/vocab/library/geographicSubdivision"),
  GOVERNING_ACCESS_NOTE("http://bibfra.me/vocab/library/governingAccessNote"),
  HISTORICAL_DATA("http://bibfra.me/vocab/library/adminhist"),
  INFORMATION_ABOUT_DOCUMENTATION("http://bibfra.me/vocab/library/informationAboutDocumentation"),
  INFORMATION_RELATING_TO_COPYRIGHT_STATUS("http://bibfra.me/vocab/library/informationRelatingToCopyrightStatus"),
  ISSN("http://bibfra.me/vocab/library/issn"),
  ISSUANCE("http://bibfra.me/vocab/library/issuance"),
  ISSUANCE_NOTE("http://bibfra.me/vocab/library/issuanceNote"),
  ISSUING_BODY("http://bibfra.me/vocab/library/issuingBody"),
  ITEM_NUMBER("http://bibfra.me/vocab/library/itemNumber"),
  LABEL("http://bibfra.me/vocab/lite/label"),
  LABEL_RDF("http://www.w3.org/2000/01/rdf-schema#label"),
  LANGUAGE("http://bibfra.me/vocab/lite/language"),
  LANGUAGE_NOTE("http://bibfra.me/vocab/library/languageNote"),
  LCNAF_ID("http://bibfra.me/vocab/library/lcnafId"),
  LINK("http://bibfra.me/vocab/lite/link"),
  LINKAGE("http://bibfra.me/vocab/library/linkage"),
  LEGAL_DATE("http://bibfra.me/vocab/library/legalDate"),
  LOCAL_ID_VALUE("http://bibfra.me/vocab/library/localId"),
  LOCATION_OF_EVENT("http://bibfra.me/vocab/library/locationOfEvent"),
  LOCATION_OF_ORIGINALS_DUPLICATES("http://bibfra.me/vocab/library/locationOfOriginalsDuplicates"),
  LOCATION_OF_OTHER_ARCHIVAL_MATERIAL("http://bibfra.me/vocab/library/locationOfOtherArchivalMaterial"),
  MAIN_TITLE("http://bibfra.me/vocab/library/mainTitle"),
  MATERIALS("http://bibfra.me/vocab/library/materials"),
  MATERIALS_SPECIFIED("http://bibfra.me/vocab/library/materialsSpecified"),
  MISC_INFO("http://bibfra.me/vocab/library/miscInfo"),
  MODIFYING_AGENCY("http://bibfra.me/vocab/library/modifyingAgency"),
  MUSIC_KEY("http://bibfra.me/vocab/library/musicKey"),
  NAME("http://bibfra.me/vocab/lite/name"),
  NAME_ALTERNATIVE("http://bibfra.me/vocab/lite/nameAlternative"),
  NON_SORT_NUM("http://bibfra.me/vocab/bflc/nonSortNum"),
  NOTE("http://bibfra.me/vocab/lite/note"),
  NUMBER_OF_PARTS("http://bibfra.me/vocab/library/numberOfParts"),
  NUMERATION("http://bibfra.me/vocab/library/numeration"),
  ORIGINAL_VERSION_NOTE("http://bibfra.me/vocab/library/originalVersionNote"),
  OTHER_EVENT_INFORMATION("http://bibfra.me/vocab/library/otherEventInformation"),
  PARTICIPANT_NOTE("http://bibfra.me/vocab/library/participantNote"),
  PART_NAME("http://bibfra.me/vocab/library/partName"),
  PART_NUMBER("http://bibfra.me/vocab/library/partNumber"),
  PHYSICAL_DESCRIPTION("http://bibfra.me/vocab/library/physicalDescription"),
  PLACE("http://bibfra.me/vocab/library/place"),
  PROJECTED_PROVISION_DATE("http://bibfra.me/vocab/bflc/projectedProvisionDate"),
  PROVIDER_DATE("http://bibfra.me/vocab/lite/providerDate"),
  PUBLICATION_INFORMATION("http://bibfra.me/vocab/library/publicationInformation"),
  QUALIFIER("http://bibfra.me/vocab/library/qualifier"),
  REFERENCES("http://bibfra.me/vocab/library/references"),
  RELATED_PARTS("http://bibfra.me/vocab/library/relatedParts"),
  RELATOR_CODE("http://bibfra.me/vocab/library/relator_code"),
  RELATOR_TERM("http://bibfra.me/vocab/library/relator_term"),
  REPORT_NUMBER("http://bibfra.me/vocab/library/reportNumber"),
  REPRODUCTION_NOTE("http://bibfra.me/vocab/library/reproductionNote"),
  RESOURCE_PREFERRED("http://library.link/vocab/resourcePreferred"),
  SCALE_NOTE("http://bibfra.me/vocab/library/scaleNote"),
  SERIES_STATEMENT("http://bibfra.me/vocab/library/seriesStatement"),
  SIMPLE_PLACE("http://bibfra.me/vocab/lite/place"),
  SOURCE("http://bibfra.me/vocab/library/source"),
  STATEMENT_OF_RESPONSIBILITY("http://bibfra.me/vocab/library/statementOfResponsibility"),
  STATUS("http://bibfra.me/vocab/library/status"),
  STUDY_PROGRAM_NAME("http://bibfra.me/vocab/library/studyProgramName"),
  SUBORDINATE_UNIT("http://bibfra.me/vocab/library/subordinateUnit"),
  SUBTITLE("http://bibfra.me/vocab/library/subTitle"),
  SUMMARY("http://bibfra.me/vocab/library/summary"),
  SUPPLEMENT("http://bibfra.me/vocab/library/supplement"),
  SYSTEM_DETAILS("http://bibfra.me/vocab/library/systemDetails"),
  SYSTEM_DETAILS_ACCESS_NOTE("http://bibfra.me/vocab/library/systemDetailsAccessNote"),
  TABLE_OF_CONTENTS("http://bibfra.me/vocab/library/tableOfContents"),
  TARGET_AUDIENCE("http://bibfra.me/vocab/library/targetAudience"),
  TERM("http://bibfra.me/vocab/library/term"),
  TITLES("http://bibfra.me/vocab/library/titles"),
  TRANSCRIBING_AGENCY("http://bibfra.me/vocab/library/transcribingAgency"),
  TYPE_OF_REPORT("http://bibfra.me/vocab/library/typeOfReport"),
  VARIANT_TYPE("http://bibfra.me/vocab/library/variantType"),
  VERSION("http://bibfra.me/vocab/library/version"),
  VOLUME("http://bibfra.me/vocab/library/volume"),
  WITH_NOTE("http://bibfra.me/vocab/library/withNote");

  private final String value;

  PropertyDictionary(java.lang.String value) {
    this.value = value;
  }

  public static Optional<PropertyDictionary> fromValue(String value) {
    return Arrays.stream(PropertyDictionary.values())
      .filter(property -> property.getValue().equals(value))
      .findFirst();
  }
}
